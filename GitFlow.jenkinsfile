//@Library('GitFlow_Shared_Lib@main') _

String hostCredentialsId    = 'PFHMKS0'                   /* Change to Jenkins credentials ID for Host userid/password            */
String cesCredentialsId     = 'PFHMKS0-CES'                    /* Change to Jenkins credentials ID for CES token                       */
String gitRepoUrl           = 'https://github.com/CPWRGIT/GitFlow_PFHMKS0.git'                        /* Change "<repo>" to user specific repository name                     */
String gitCredentialsId     = 'a7500faf-0dd3-42b5-8b00-0553524a79d2'           /* Change to Jenkins credentials ID for GitHub personal access token    */
String ccRepo               = 'PFHMKS0.XPCOVER.REPOSIT'                  /* Change to user specific code coverage repository                     */

//This code will be used later to call a shared library script
// git2Ispw(
//     executionEnvironment: 'CWCC',
//     hostCredentialsId:    hostCredentialsId,
//     cesCredentialsId:     cesCredentialsId, 
//     gitCredentialsId:     gitCredentialsId, 
//     gitRepoUrl:           gitRepoUrl,       
//     ccRepo:               ccRepo
// )

stage ("Initialize") {
    node {
        // Clean the workspace
        cleanWs()
    }
}

stage ("Checkout") {
    node {
         // Get the code from the Git repository
        checkout scm
    }
}

stage ("Load Code to Mainframe") {
    node {
        gitToIspwIntegration app: "GFLD",
        branchMapping: '''*release* => RLSE, per-branch'
        //development* => EMR, per-branch
        feature* => FEAT, per-branch''',
        connectionId: '38e854b0-f7d3-4a8f-bf31-2d8bfac3dbd4', // CWC2
        credentialsId: "${hostCredentialsId}",
        gitCredentialsId: "${gitCredentialsId}", // Mingh9999
        gitRepoUrl: "${gitRepoUrl}"
        runtimeConfig: 'ic2ga', // CWC2
        stream: 'GITFLOW'
    }
}

stage ("Build Mainframe Code") {
    node {
    }
}
stage ("Execute Unit Tests") {
    node {
    }
}
stage ("SonarQube Scan") {
    node {
    }
}
